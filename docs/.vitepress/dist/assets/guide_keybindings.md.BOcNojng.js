import{_ as e,c as d,o as i,ae as a}from"./chunks/framework.U1Gow_7P.js";const m=JSON.parse('{"title":"Default Keybindings","description":"","frontmatter":{},"headers":[],"relativePath":"guide/keybindings.md","filePath":"guide/keybindings.md"}'),n={name:"guide/keybindings.md"};function o(r,t,c,l,s,u){return i(),d("div",null,t[0]||(t[0]=[a('<h1 id="default-keybindings" tabindex="-1">Default Keybindings <a class="header-anchor" href="#default-keybindings" aria-label="Permalink to &quot;Default Keybindings&quot;">​</a></h1><p>By default, keybindings are defined in the sample configuration file at <code>~/.config/iniwm/iniwm.ini</code>. These serve as fallback keybindings if no custom configuration is provided.</p><h2 id="multimedia-keys" tabindex="-1">Multimedia Keys <a class="header-anchor" href="#multimedia-keys" aria-label="Permalink to &quot;Multimedia Keys&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Key</th><th>Action</th></tr></thead><tbody><tr><td><code>XF86AudioRaiseVolume</code></td><td>Raise Volume</td></tr><tr><td><code>XF86AudioLowerVolume</code></td><td>Decrease Volume</td></tr><tr><td><code>XF86AudioMute</code></td><td>Mute Volume</td></tr></tbody></table><h2 id="window-management" tabindex="-1">Window Management <a class="header-anchor" href="#window-management" aria-label="Permalink to &quot;Window Management&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Keybinding</th><th>Action</th></tr></thead><tbody><tr><td><code>Win/Super + 1-10</code></td><td>Switch between workspaces 1-10</td></tr><tr><td><code>Win/Super + ←/→</code></td><td>Switch window focus</td></tr><tr><td><code>Win/Super + t</code></td><td>Toggle floating mode</td></tr><tr><td><code>Win/Super + Shift + r</code></td><td>Reload configuration</td></tr><tr><td><code>Win/Super + Shift + e</code></td><td>Quit window manager</td></tr></tbody></table><h2 id="application-launchers" tabindex="-1">Application Launchers <a class="header-anchor" href="#application-launchers" aria-label="Permalink to &quot;Application Launchers&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Keybinding</th><th>Action</th></tr></thead><tbody><tr><td><code>Win/Super + Return</code></td><td>Launch kitty terminal (customize in config)</td></tr><tr><td><code>Ctrl + Alt + t</code></td><td>Launch gnome-terminal</td></tr><tr><td><code>Ctrl + Alt + l</code></td><td>Lock screen with i3lock</td></tr><tr><td><code>Win/Super + w</code></td><td>Launch Firefox</td></tr></tbody></table>',8)]))}const b=e(n,[["render",o]]);export{m as __pageData,b as default};
